(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{533:function(a,t,s){"use strict";s.r(t);var e=s(4),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),s("h4",{attrs:{id:"vue-js-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-是什么"}},[a._v("#")]),a._v(" Vue.js 是什么")]),a._v(" "),s("p",[a._v("Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。")]),a._v(" "),s("h4",{attrs:{id:"vue的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期"}},[a._v("#")]),a._v(" Vue的生命周期")]),a._v(" "),s("h2",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[a._v("#")]),a._v(" 基本语法")]),a._v(" "),s("h3",{attrs:{id:"插值指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插值指令"}},[a._v("#")]),a._v(" 插值指令")]),a._v(" "),s("h4",{attrs:{id:"mustache-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mustache-语法"}},[a._v("#")]),a._v(" Mustache 语法")]),a._v(" "),s("p",[a._v("Mustache语法就是{{}}就是双大括号语法;Mustache不仅可以直接写变量,也可以写简单的表达式")]),a._v(" "),s("h4",{attrs:{id:"v-once"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-once"}},[a._v("#")]),a._v(" v-once")]),a._v(" "),s("ul",[s("li",[a._v("该指令不用跟表达式")]),a._v(" "),s("li",[a._v("该指令表示元素和组件只渲染一次,不会随着数据的改变而改变")])]),a._v(" "),s("h4",{attrs:{id:"v-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-html"}},[a._v("#")]),a._v(" v-html")]),a._v(" "),s("ul",[s("li",[a._v("该指令往往后面会跟上一个string类型")]),a._v(" "),s("li",[a._v("会将string的html解析出来并且进行渲染")])]),a._v(" "),s("h4",{attrs:{id:"v-text"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-text"}},[a._v("#")]),a._v(" v-text")]),a._v(" "),s("ul",[s("li",[a._v("v-text作用与Mustache比较相似,都是用于将数据显示在界面中")]),a._v(" "),s("li",[a._v("v-text通常情况下,接受一个string类型")])]),a._v(" "),s("h4",{attrs:{id:"v-pre"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-pre"}},[a._v("#")]),a._v(" v-pre")]),a._v(" "),s("ul",[s("li",[a._v("v-pre 用于跳过这个元素和它子元素的编译过程,用于显示原本的Mustache语法")])]),a._v(" "),s("h4",{attrs:{id:"v-cloak"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-cloak"}},[a._v("#")]),a._v(" v-cloak")]),a._v(" "),s("ul",[s("li",[a._v("在某些情况下,我们浏览器可能会直接显示出未编译的Mustache标签")]),a._v(" "),s("li",[a._v("cloak 斗篷")])]),a._v(" "),s("h3",{attrs:{id:"绑定属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定属性"}},[a._v("#")]),a._v(" 绑定属性")]),a._v(" "),s("h4",{attrs:{id:"v-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-bind"}},[a._v("#")]),a._v(" v-bind")]),a._v(" "),s("ul",[s("li",[a._v("作用: 动态绑定属性")]),a._v(" "),s("li",[a._v("缩写: :")])]),a._v(" "),s("h3",{attrs:{id:"事件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件监听"}},[a._v("#")]),a._v(" 事件监听")]),a._v(" "),s("h4",{attrs:{id:"v-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-on"}},[a._v("#")]),a._v(" v-on")]),a._v(" "),s("ul",[s("li",[a._v("作用: 事件监听")]),a._v(" "),s("li",[a._v("缩写: @")])]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("事件调用的方法没有参数,可以不写小括号")]),a._v(" "),s("li",[a._v("在事件定义时,写方法时省略了小括号,但是方法本身需要一个参数的,这个时候vue会默认将浏览器生成的event事件对象作为参数传入到方法")]),a._v(" "),s("li",[a._v("方法定义时,我们需要event对象,同时又需要其他参数,在调用方式,如何受到的获取到浏览器的event对象:$event")])])]),a._v(" "),s("p",[a._v("修饰符")]),a._v(" "),s("ul",[s("li",[a._v(".stop 调用event.stopPropagation() 阻止事件冒泡")]),a._v(" "),s("li",[a._v(".prevent 调用event.preventDefault() 阻止默认行为")]),a._v(" "),s("li",[a._v(".keyCode | keyAlias 只当事件是从特定键触发时才触发回调")]),a._v(" "),s("li",[a._v(".native 监听组件根元素的原生事件")]),a._v(" "),s("li",[a._v(".once 只触发一次回调")])]),a._v(" "),s("h3",{attrs:{id:"条件判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件判断"}},[a._v("#")]),a._v(" 条件判断")]),a._v(" "),s("h4",{attrs:{id:"v-if-v-else-if-v-else"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-else-if-v-else"}},[a._v("#")]),a._v(" v-if v-else-if v-else")]),a._v(" "),s("h2",{attrs:{id:"组件化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[a._v("#")]),a._v(" 组件化")]),a._v(" "),s("h4",{attrs:{id:"组件的基本步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件的基本步骤"}},[a._v("#")]),a._v(" 组件的基本步骤")]),a._v(" "),s("ul",[s("li",[a._v("创建组件构造器")]),a._v(" "),s("li",[a._v("注册组件")]),a._v(" "),s("li",[a._v("使用组件")])]),a._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("h4",{attrs:{id:"安装-vue-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-vue-cli"}},[a._v("#")]),a._v(" 安装@vue/cli")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -g @vue/cli\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# OR")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" @vue/cli\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"创建项目mall-vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建项目mall-vue"}},[a._v("#")]),a._v(" 创建项目mall-vue")]),a._v(" "),s("div",{staticClass:"language-shell script line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("vue create mall-vue\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])}),[],!1,null,null,null);t.default=v.exports}}]);