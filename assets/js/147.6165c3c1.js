(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{646:function(t,n,a){"use strict";a.r(n);var e=a(4),r=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ol",[a("li",[a("em",[a("strong",[t._v("【强制】")])]),t._v(" 日期格式化时，传入 pattern 中表示年份统一使用小写的 y。")])]),t._v(" "),a("blockquote",[a("p",[t._v('说明：日期格式化时，yyyy 表示当天所在的年，而大写的 YYYY 代表是 week in which year（JDK7 之后\n引入的概念），意思是当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，返回的 YYYY\n就是下一年。\n正例：表示日期和时间的格式如下所示：\nnew SimpleDateFormat("yyyy-MM-dd HH:mm:ss")')])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("em",[a("strong",[t._v("【强制】")])]),t._v(" 在日期格式中分清楚大写的 M 和小写的 m，大写的 H 和小写的 h 分别指代的意义。")])]),t._v(" "),a("blockquote",[a("p",[t._v("说明：日期格式中的这两对字母表意如下："),a("br"),t._v("\n1） 表示月份是大写的 M；"),a("br"),t._v("\n2） 表示分钟则是小写的 m；"),a("br"),t._v("\n3） 24 小时制的是大写的 H；"),a("br"),t._v("\n4） 12 小时制的则是小写的 h。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("em",[a("strong",[t._v("【强制】")])]),t._v(" 获取当前毫秒数：System.currentTimeMillis(); 而不是 new Date().getTime()。")])]),t._v(" "),a("blockquote",[a("p",[t._v("说明：如果想获取更加精确的纳秒级时间值，使用 System.nanoTime 的方式。在 JDK8 中，针对统计时间\n等场景，推荐使用 Instant 类。")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("em",[a("strong",[t._v("【强制】")])]),t._v(" 不允许在程序任何地方中使用：1）java.sql.Date。 2）java.sql.Time。\n3）java.sql.Timestamp。")])]),t._v(" "),a("blockquote",[a("p",[t._v("说明：第 1 个不记录时间，getHours()抛出异常；第 2 个不记录日期，getYear()抛出异常；第 3 个在构造\n方法 super((time/1000)*1000)，在 Timestamp 属性 fastTime 和 nanos 分别存储秒和纳秒信息。\n反例： java.util.Date.after(Date)进行时间比较时，当入参是 java.sql.Timestamp 时，会触发 JDK\nBUG(JDK9 已修复)，可能导致比较时的意外结果。")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("em",[a("strong",[t._v("【强制】")])]),t._v(" 不要在程序中写死一年为 365 天，避免在公历闰年时出现日期转换错误或程序逻辑\n错误。")])]),t._v(" "),a("blockquote",[a("p",[t._v("正例：\n// 获取今年的天数"),a("br"),t._v("\nint daysOfThisYear = LocalDate.now().lengthOfYear();"),a("br"),t._v("\n// 获取指定某年的天数"),a("br"),t._v("\nLocalDate.of(2011, 1, 1).lengthOfYear();"),a("br"),t._v("\n反例："),a("br"),t._v("\n// 第一种情况：在闰年 366 天时，出现数组越界异常"),a("br"),t._v("\nint[] dayArray = new int[365];"),a("br"),t._v("\n// 第二种情况：一年有效期的会员制，今年 1 月 26 日注册，硬编码 365 返回的却是 1 月 25 日"),a("br"),t._v("\nCalendar calendar = Calendar.getInstance();"),a("br"),t._v("\ncalendar.set(2020, 1, 26);"),a("br"),t._v("\ncalendar.add(Calendar.DATE, 365);")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("p",[a("strong",[t._v("【推荐】")]),t._v(" 避免公历闰年 2 月问题。闰年的 2 月份有 29 天，一年后的那一天不可能是 2 月 29\n日。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("【推荐】")]),t._v(" 使用枚举值来指代月份。如果使用数字，注意 Date，Calendar 等日期相关类的月份\nmonth 取值在 0-11 之间。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("说明：参考 JDK 原生注释，Month value is 0-based. e.g., 0 for January.\n正例： Calendar.JANUARY，Calendar.FEBRUARY，Calendar.MARCH 等来指代相应月份来进行传参或\n比较。")])])])}),[],!1,null,null,null);n.default=r.exports}}]);