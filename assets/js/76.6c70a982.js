(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{575:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("在上篇文章"),s("a",{attrs:{href:"https://www.guojuna.github.io/SpringBoot/2016/02/03/spring-boot-web.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot(二)：Web 综合开发"),s("OutboundLink")],1),t._v("中简单介绍了一下 Spring Boot Jpa 的基础性使用，这篇文章将更加全面的介绍 Spring Boot Jpa 常见用法以及注意事项。")]),t._v(" "),s("p",[t._v("使用 Spring Boot Jpa 开发时，发现国内对 Spring Boot Jpa 全面介绍的文章比较少案例也比较零碎，因此写文章总结一下。本人也正在翻译"),s("a",{attrs:{href:"https://ityouknow.gitbooks.io/spring-data-jpa-reference-documentation/content/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Data JPA 参考指南"),s("OutboundLink")],1),t._v(",有兴趣的同学欢迎联系我，一起加入翻译中！")]),t._v(" "),s("h2",{attrs:{id:"spring-boot-jpa-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-jpa-介绍"}},[t._v("#")]),t._v(" Spring Boot Jpa 介绍")]),t._v(" "),s("h3",{attrs:{id:"首先了解-jpa-是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首先了解-jpa-是什么？"}},[t._v("#")]),t._v(" 首先了解 Jpa 是什么？")]),t._v(" "),s("p",[t._v("Jpa (Java Persistence API) 是 Sun 官方提出的 Java 持久化规范。它为 Java 开发人员提供了一种对象/关联映射工具来管理 Java 应用中的关系数据。它的出现主要是为了简化现有的持久化开发工作和整合 ORM 技术，结束现在 Hibernate，TopLink，JDO 等 ORM 框架各自为营的局面。")]),t._v(" "),s("p",[t._v("值得注意的是，Jpa是在充分吸收了现有 Hibernate，TopLink，JDO 等 ORM 框架的基础上发展而来的，具有易于使用，伸缩性强等优点。从目前的开发社区的反应上看，Jpa 受到了极大的支持和赞扬，其中就包括了 Spring 与 EJB3. 0的开发团队。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意:Jpa 是一套规范，不是一套产品，那么像 Hibernate,TopLink,JDO 他们是一套产品，如果说这些产品实现了这个 Jpa 规范，那么我们就可以叫他们为 Jpa 的实现产品。")])]),t._v(" "),s("h3",{attrs:{id:"spring-boot-jpa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-jpa"}},[t._v("#")]),t._v(" Spring Boot Jpa")]),t._v(" "),s("p",[t._v("Spring Boot Jpa 是 Spring 基于 ORM 框架、Jpa 规范的基础上封装的一套 Jpa 应用框架，可使开发者用极简的代码即可实现对数据的访问和操作。它提供了包括增删改查等在内的常用功能，且易于扩展！学习并使用 Spring Data Jpa  可以极大提高开发效率！")]),t._v(" "),s("blockquote",[s("p",[t._v("Spring Boot Jpa 让我们解脱了 DAO 层的操作，基本上所有 CRUD 都可以依赖于它来实现")])]),t._v(" "),s("h2",{attrs:{id:"基本查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本查询"}},[t._v("#")]),t._v(" 基本查询")]),t._v(" "),s("p",[t._v("基本查询也分为两种，一种是 Spring Data 默认已经实现，一种是根据查询的方法来自动解析成 SQL。")]),t._v(" "),s("h3",{attrs:{id:"预先生成方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预先生成方法"}},[t._v("#")]),t._v(" 预先生成方法")]),t._v(" "),s("p",[t._v("Spring Boot Jpa  默认预先生成了一些基本的CURD的方法，例如：增、删、改等等")]),t._v(" "),s("p",[t._v("1 继承 JpaRepository")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserRepository")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JpaRepository")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("2 使用默认方法")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testBaseQuery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tuserRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tuserRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOne")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1l")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tuserRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tuserRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tuserRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tuserRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exists")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1l")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("就不解释了根据方法名就看出意思来")]),t._v(" "),s("h3",{attrs:{id:"自定义简单查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义简单查询"}},[t._v("#")]),t._v(" 自定义简单查询")]),t._v(" "),s("p",[t._v("自定义的简单查询就是根据方法名来自动生成 SQL，主要的语法是"),s("code",[t._v("findXXBy")]),t._v(","),s("code",[t._v("readAXXBy")]),t._v(","),s("code",[t._v("queryXXBy")]),t._v(","),s("code",[t._v("countXXBy")]),t._v(", "),s("code",[t._v("getXXBy")]),t._v("后面跟属性名称：")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByUserName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("也使用一些加一些关键字"),s("code",[t._v("And")]),t._v("、 "),s("code",[t._v("Or")])]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByUserNameOrEmail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("修改、删除、统计也是类似语法")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("countByUserName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("基本上 SQL 体系中的关键词都可以使用，例如："),s("code",[t._v("LIKE")]),t._v("、 "),s("code",[t._v("IgnoreCase")]),t._v("、 "),s("code",[t._v("OrderBy")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByEmailLike")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByUserNameIgnoreCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByUserNameOrderByEmailDesc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("具体的关键字，使用方法和生产成SQL如下表所示")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Keyword")]),t._v(" "),s("th",[t._v("Sample")]),t._v(" "),s("th",[t._v("JPQL snippet")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("And")]),t._v(" "),s("td",[t._v("findByLastnameAndFirstname")]),t._v(" "),s("td",[t._v("… where x.lastname = ?1 and x.firstname = ?2")])]),t._v(" "),s("tr",[s("td",[t._v("Or")]),t._v(" "),s("td",[t._v("findByLastnameOrFirstname")]),t._v(" "),s("td",[t._v("… where x.lastname = ?1 or x.firstname = ?2")])]),t._v(" "),s("tr",[s("td",[t._v("Is,Equals")]),t._v(" "),s("td",[t._v("findByFirstnameIs,findByFirstnameEquals")]),t._v(" "),s("td",[t._v("… where x.firstname = ?1")])]),t._v(" "),s("tr",[s("td",[t._v("Between")]),t._v(" "),s("td",[t._v("findByStartDateBetween")]),t._v(" "),s("td",[t._v("… where x.startDate between ?1 and ?2")])]),t._v(" "),s("tr",[s("td",[t._v("LessThan")]),t._v(" "),s("td",[t._v("findByAgeLessThan")]),t._v(" "),s("td",[t._v("… where x.age < ?1")])]),t._v(" "),s("tr",[s("td",[t._v("LessThanEqual")]),t._v(" "),s("td",[t._v("findByAgeLessThanEqual")]),t._v(" "),s("td",[t._v("… where x.age ⇐ ?1")])]),t._v(" "),s("tr",[s("td",[t._v("GreaterThan")]),t._v(" "),s("td",[t._v("findByAgeGreaterThan")]),t._v(" "),s("td",[t._v("… where x.age > ?1")])]),t._v(" "),s("tr",[s("td",[t._v("GreaterThanEqual")]),t._v(" "),s("td",[t._v("findByAgeGreaterThanEqual")]),t._v(" "),s("td",[t._v("… where x.age >= ?1")])]),t._v(" "),s("tr",[s("td",[t._v("After")]),t._v(" "),s("td",[t._v("findByStartDateAfter")]),t._v(" "),s("td",[t._v("… where x.startDate > ?1")])]),t._v(" "),s("tr",[s("td",[t._v("Before")]),t._v(" "),s("td",[t._v("findByStartDateBefore")]),t._v(" "),s("td",[t._v("… where x.startDate < ?1")])]),t._v(" "),s("tr",[s("td",[t._v("IsNull")]),t._v(" "),s("td",[t._v("findByAgeIsNull")]),t._v(" "),s("td",[t._v("… where x.age is null")])]),t._v(" "),s("tr",[s("td",[t._v("IsNotNull,NotNull")]),t._v(" "),s("td",[t._v("findByAge(Is)NotNull")]),t._v(" "),s("td",[t._v("… where x.age not null")])]),t._v(" "),s("tr",[s("td",[t._v("Like")]),t._v(" "),s("td",[t._v("findByFirstnameLike")]),t._v(" "),s("td",[t._v("… where x.firstname like ?1")])]),t._v(" "),s("tr",[s("td",[t._v("NotLike")]),t._v(" "),s("td",[t._v("findByFirstnameNotLike")]),t._v(" "),s("td",[t._v("… where x.firstname not like ?1")])]),t._v(" "),s("tr",[s("td",[t._v("StartingWith")]),t._v(" "),s("td",[t._v("findByFirstnameStartingWith")]),t._v(" "),s("td",[t._v("… where x.firstname like ?1 (parameter bound with appended %)")])]),t._v(" "),s("tr",[s("td",[t._v("EndingWith")]),t._v(" "),s("td",[t._v("findByFirstnameEndingWith")]),t._v(" "),s("td",[t._v("… where x.firstname like ?1 (parameter bound with prepended %)")])]),t._v(" "),s("tr",[s("td",[t._v("Containing")]),t._v(" "),s("td",[t._v("findByFirstnameContaining")]),t._v(" "),s("td",[t._v("… where x.firstname like ?1 (parameter bound wrapped in %)")])]),t._v(" "),s("tr",[s("td",[t._v("OrderBy")]),t._v(" "),s("td",[t._v("findByAgeOrderByLastnameDesc")]),t._v(" "),s("td",[t._v("… where x.age = ?1 order by x.lastname desc")])]),t._v(" "),s("tr",[s("td",[t._v("Not")]),t._v(" "),s("td",[t._v("findByLastnameNot")]),t._v(" "),s("td",[t._v("… where x.lastname <> ?1")])]),t._v(" "),s("tr",[s("td",[t._v("In")]),t._v(" "),s("td",[t._v("findByAgeIn(Collection"),s("Age",[t._v(" ages)")])],1),t._v(" "),s("td",[t._v("… where x.age in ?1")])]),t._v(" "),s("tr",[s("td",[t._v("NotIn")]),t._v(" "),s("td",[t._v("findByAgeNotIn(Collection"),s("Age",[t._v(" age)")])],1),t._v(" "),s("td",[t._v("… where x.age not in ?1")])]),t._v(" "),s("tr",[s("td",[t._v("TRUE")]),t._v(" "),s("td",[t._v("findByActiveTrue()")]),t._v(" "),s("td",[t._v("… where x.active = true")])]),t._v(" "),s("tr",[s("td",[t._v("FALSE")]),t._v(" "),s("td",[t._v("findByActiveFalse()")]),t._v(" "),s("td",[t._v("… where x.active = false")])]),t._v(" "),s("tr",[s("td",[t._v("IgnoreCase")]),t._v(" "),s("td",[t._v("findByFirstnameIgnoreCase")]),t._v(" "),s("td",[t._v("… where UPPER(x.firstame) = UPPER(?1)")])])])]),t._v(" "),s("h2",{attrs:{id:"复杂查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂查询"}},[t._v("#")]),t._v(" 复杂查询")]),t._v(" "),s("p",[t._v("在实际的开发中我们需要用到分页、删选、连表等查询的时候就需要特殊的方法或者自定义 SQL")]),t._v(" "),s("h3",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("p",[t._v("分页查询在实际使用中非常普遍了，Spring Boot Jpa 已经帮我们实现了分页的功能，在查询的方法中，需要传入参数"),s("code",[t._v("Pageable")]),t._v(" ,当查询中有多个参数的时候"),s("code",[t._v("Pageable")]),t._v("建议做为最后一个参数传入.")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pageable")]),t._v(" pageable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByUserName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pageable")]),t._v(" pageable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("Pageable")]),t._v(" 是 Spring 封装的分页实现类，使用的时候需要传入页数、每页条数和排序规则")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testPageQuery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sort")]),t._v(" sort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Direction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DESC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pageable")]),t._v(" pageable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PageRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("page"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    userRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    userRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByUserName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("限制查询")])]),t._v(" "),s("p",[t._v("有时候我们只需要查询前N个元素，或者支取前一个实体。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("User findFirstByOrderByLastnameAsc();\nUser findTopByOrderByAgeDesc();\nPage<User> queryFirst10ByLastname(String lastname, Pageable pageable);\nList<User> findFirst10ByLastname(String lastname, Sort sort);\nList<User> findTop10ByLastname(String lastname, Pageable pageable);\n")])])]),s("h3",{attrs:{id:"自定义sql查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义sql查询"}},[t._v("#")]),t._v(" 自定义SQL查询")]),t._v(" "),s("p",[t._v("其实 Spring Data 觉大部分的 SQL 都可以根据方法名定义的方式来实现，但是由于某些原因我们想使用自定义的 SQL 来查询，Spring Data 也是完美支持的；在 SQL 的查询方法上面使用"),s("code",[t._v("@Query")]),t._v("注解，如涉及到删除和修改在需要加上"),s("code",[t._v("@Modifying")]),t._v(".也可以根据需要添加 "),s("code",[t._v("@Transactional")]),t._v("对事物的支持，查询超时的设置等。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Modifying\n@Query("update User u set u.userName = ?1 where u.id = ?2")\nint modifyByIdAndUserId(String  userName, Long id);\n\t\n@Transactional\n@Modifying\n@Query("delete from User where id = ?1")\nvoid deleteByUserId(Long id);\n  \n@Transactional(timeout = 10)\n@Query("select u from User u where u.emailAddress = ?1")\nUser findByEmailAddress(String emailAddress);\n')])])]),s("h3",{attrs:{id:"多表查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[t._v("#")]),t._v(" 多表查询")]),t._v(" "),s("p",[t._v("多表查询 Spring Boot Jpa 中有两种实现方式，第一种是利用 Hibernate 的级联查询来实现，第二种是创建一个结果集的接口来接收连表查询后的结果，这里主要第二种方式。")]),t._v(" "),s("p",[t._v("首先需要定义一个结果集的接口类。")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotelSummary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("City")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAverageRating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAverageRatingRounded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAverageRating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAverageRating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("查询的方法返回类型设置为新创建的接口")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select h.city as city, h.name as name, avg(r.rating) as averageRating "')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from Hotel h left outer join h.reviews r where h.city = ?1 group by h"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotelSummary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByCity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("City")]),t._v(" city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pageable")]),t._v(" pageable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select h.name as name, avg(r.rating) as averageRating "')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from Hotel h left outer join h.reviews r  group by h"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotelSummary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findByCity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pageable")]),t._v(" pageable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Page<HotelSummary> hotels = this.hotelRepository.findByCity(new PageRequest(0, 10, Direction.ASC, "name"));\nfor(HotelSummary summay:hotels){\n\t\tSystem.out.println("Name" +summay.getName());\n\t}\n')])])]),s("blockquote",[s("p",[t._v("在运行中 Spring 会给接口（HotelSummary）自动生产一个代理类来接收返回的结果，代码汇总使用 "),s("code",[t._v("getXX")]),t._v("的形式来获取")])]),t._v(" "),s("h2",{attrs:{id:"多数据源的支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多数据源的支持"}},[t._v("#")]),t._v(" 多数据源的支持")]),t._v(" "),s("h3",{attrs:{id:"同源数据库的多源支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源数据库的多源支持"}},[t._v("#")]),t._v(" 同源数据库的多源支持")]),t._v(" "),s("p",[t._v("日常项目中因为使用的分布式开发模式，不同的服务有不同的数据源，常常需要在一个项目中使用多个数据源，因此需要配置 Spring Boot Jpa 对多数据源的使用，一般分一下为三步：")]),t._v(" "),s("ul",[s("li",[t._v("1 配置多数据源")]),t._v(" "),s("li",[t._v("2 不同源的实体类放入不同包路径")]),t._v(" "),s("li",[t._v("3 声明不同的包路径下使用不同的数据源、事务支持")])]),t._v(" "),s("h3",{attrs:{id:"异构数据库多源支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异构数据库多源支持"}},[t._v("#")]),t._v(" 异构数据库多源支持")]),t._v(" "),s("p",[t._v("比如我们的项目中，即需要对 mysql 的支持，也需要对 Mongodb 的查询等。")]),t._v(" "),s("p",[t._v("实体类声明"),s("code",[t._v("@Entity")]),t._v(" 关系型数据库支持类型、声明"),s("code",[t._v("@Document")]),t._v(" 为 Mongodb 支持类型，不同的数据源使用不同的实体就可以了")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonRepository")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Repository")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Entity")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserRepository")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Repository")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Document")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但是，如果 User 用户既使用 Mysql 也使用 Mongodb 呢，也可以做混合使用")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JpaPersonRepository")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Repository")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MongoDBPersonRepository")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Repository")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Entity")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Document")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("也可以通过对不同的包路径进行声明，比如 A 包路径下使用 mysql,B 包路径下使用 MongoDB")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@EnableJpaRepositories(basePackages = "com.neo.repositories.jpa")\n@EnableMongoRepositories(basePackages = "com.neo.repositories.mongo")\ninterface Configuration { }\n')])])]),s("h2",{attrs:{id:"其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),s("p",[s("strong",[t._v("使用枚举")])]),t._v(" "),s("p",[t._v("使用枚举的时候，我们希望数据库中存储的是枚举对应的 String 类型，而不是枚举的索引值，需要在属性上面添加"),s("code",[t._v("@Enumerated(EnumType.STRING)")]),t._v(" 注解")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@Enumerated(EnumType.STRING) \n@Column(nullable = true)\nprivate UserType type;\n")])])]),s("p",[s("strong",[t._v("不需要和数据库映射的属性")])]),t._v(" "),s("p",[t._v("正常情况下我们在实体类上加入注解"),s("code",[t._v("@Entity")]),t._v("，就会让实体类和表相关连如果其中某个属性我们不需要和数据库来关联只是在展示的时候做计算，只需要加上"),s("code",[t._v("@Transient")]),t._v("属性既可。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@Transient\nprivate String  userName;\n")])])]),s("p",[s("strong",[t._v("源码案例")])]),t._v(" "),s("p",[s("strong",[s("a",{attrs:{href:"https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-jpa",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例代码-github"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[s("a",{attrs:{href:"https://gitee.com/ityouknow/spring-boot-examples/tree/master/spring-boot-jpa",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例代码-码云"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("文章内容已经升级到 Spring Boot 2.x")])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Data JPA - Reference Documentation"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.gitbook.com/book/ityouknow/spring-data-jpa-reference-documentation/details",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Data JPA——参考文档 中文版"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);